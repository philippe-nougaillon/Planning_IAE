/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

body{
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, Liberation Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
}

.bs-container{
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;

  @media(min-width: 576px) {
    max-width: 540px;
  }

  @media (min-width: 768px){
    max-width: 720px;
  }

  @media (min-width: 992px) {
    max-width: 960px;
  }

  @media(min-width: 1200px) {
    max-width: 1140px;
  }
}

h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
  font-weight: 500;
  line-height: 1.25rem;
  margin-bottom: 0.5rem;
}

[type=submit].btn {
  background-color: oklch(var(--btn-color, var(--b2))/var(--tw-bg-opacity));
}

[type=submit].btn-outline {
  background-color: transparent;
}

.badge{
  white-space: nowrap;
}

[type=checkbox].toggle:focus {
  box-shadow: var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
    0 0 0 2px var(--tglbg) inset,
    var(--togglehandleborder);
}

table.table{
  font-size: 1rem;
}

table.table :where(thead, tfoot){
  font-size: .875rem;
}

table.table-lg :not(thead):not(tfoot) tr {
  font-size: 1.125rem;
}

progress.progress {
  height: 1rem;
}



/* Pagination */

/* (Copie de la classe join dans DaisyUI v4.6.0)
  join est remplacé par planning_pagination
  join-item est remplacé par a, em, et span
*/

.planning_pagination {
  display: inline-flex;
  align-items: stretch;
  border-radius: var(--rounded-btn, .5rem);
  margin-bottom: 1rem; /* rajouté */
}

/* ce qui permet que coller les boutons entre eux */
.pagination {
  display: inline-flex;
  gap: 0 !important;
}

.planning_pagination>:where(*:not(:first-child)) {
  margin-top: 0;
  margin-bottom: 0;
  margin-inline-start: -1px;
}

/* btn et btn-sm de combiné */
.planning_pagination a, .planning_pagination em, .planning_pagination span{
  display: inline-flex;
  height: 2rem;
  min-height: 2rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-radius: var(--rounded-btn, .5rem);
  border-color: transparent;
  border-color: oklch(var(--btn-color, var(--b2))/var(--tw-border-opacity));
  padding-left: .75rem;
  padding-right: .75rem;
  text-align: center;
  font-size: .875rem;
  line-height: 1em;
  gap: .5rem;
  font-weight: 600;
  text-decoration-line: none;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(0, 0, .2, 1);
  border-width: var(--border-btn, 1px);
  animation: button-pop var(--animation-btn, .25s) ease-out;
  transition-property: color, background-color, border-color, opacity, box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc, oklch(var(--bc)/1));
  /* background-color: oklch(var(--btn-color, var(--b2))/var(--tw-bg-opacity)); */
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}

.planning_pagination a:hover, .planning_pagination em:hover, .planning_pagination span:hover {
  background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2))/var(--tw-bg-opacity, 1)) 90%, black);
  border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2))/var(--tw-border-opacity, 1)) 90%, black);
}

.planning_pagination a:first-child:not(:last-child),
.planning_pagination *:first-child:not(:last-child) a,
.planning_pagination em:first-child:not(:last-child),
.planning_pagination *:first-child:not(:last-child) em,
.planning_pagination span:first-child:not(:last-child),
.planning_pagination *:first-child:not(:last-child) span {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.planning_pagination :where(a:first-child:not(:last-child)),
.planning_pagination :where(*:first-child:not(:last-child) a),
.planning_pagination :where(em:first-child:not(:last-child)),
.planning_pagination :where(*:first-child:not(:last-child) em)
.planning_pagination :where(span:first-child:not(:last-child)),
.planning_pagination :where(*:first-child:not(:last-child) span) {
  border-end-start-radius: inherit;
  border-start-start-radius: inherit;
}

.planning_pagination a:not(:first-child):not(:last-child),
.planning_pagination *:not(:first-child):not(:last-child) a,
.planning_pagination em:not(:first-child):not(:last-child),
.planning_pagination *:not(:first-child):not(:last-child) em,
.planning_pagination span:not(:first-child):not(:last-child),
.planning_pagination *:not(:first-child):not(:last-child) span {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.planning_pagination a:last-child:not(:first-child),
.planning_pagination *:last-child:not(:first-child) a,
.planning_pagination em:last-child:not(:first-child),
.planning_pagination *:last-child:not(:first-child) em,
.planning_pagination span:last-child:not(:first-child),
.planning_pagination *:last-child:not(:first-child) span {
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.planning_pagination :where(a:last-child:not(:first-child)),
.planning_pagination :where(*:last-child:not(:first-child) a),
.planning_pagination :where(em:last-child:not(:first-child)),
.planning_pagination :where(*:last-child:not(:first-child) em),
.planning_pagination :where(span:last-child:not(:first-child)),
.planning_pagination :where(*:last-child:not(:first-child) span) {
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}

.planning_pagination :where(a), .planning_pagination :where(em), .planning_pagination :where(span) {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

/* btn-active btn-primary et text-white */
.planning_pagination .current{
  background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b3))/var(--tw-bg-opacity, 1)) 90%, black);
  border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b3))/var(--tw-border-opacity, 1)) 90%, black);
  --btn-color: var(--p);
  --tw-text-opacity: 1;
  color: white;
  outline-color: var(--fallback-p, oklch(var(--p)))/1;
}

/* btn-disabled */
.planning_pagination .gap {
  pointer-events: none;
  --tw-border-opacity: 0;
  /* background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity))); */
  --tw-bg-opacity: .2;
  color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-text-opacity: .2;
}

/* Fin Pagination */